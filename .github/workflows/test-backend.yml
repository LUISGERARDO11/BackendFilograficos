# This GitHub Actions workflow is set up to run backend tests when code changes
# are pushed to the `develop` or `main` branches, or when a pull request 
# is opened targeting those branches. 

#Here's a breakdown of what each part of the workflow does:
name: Run Backend Tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env.test from secrets
        shell: bash
        run: |
          mkdir -p tests
          cat <<EOF > tests/.env.test
          NODE_ENV=${{ secrets.NODE_ENV }}
          BASE_URL=${{ secrets.BASE_URL }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
          COMPANY_EMAIL=${{ secrets.COMPANY_EMAIL }}
          CORS_WHITELIST=${{ secrets.CORS_WHITELIST }}
          CSRF_SECRET_KEY=${{ secrets.CSRF_SECRET_KEY }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_USER=${{ secrets.DB_USER }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}
          FIREBASE_SERVICE_ACCOUNT=${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_PASS=${{ secrets.SMTP_PASS }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          SMTP_REJECT_UNAUTHORIZED=${{ secrets.SMTP_REJECT_UNAUTHORIZED }}
          SMTP_SECURE=${{ secrets.SMTP_SECURE }}
          SMTP_USER=${{ secrets.SMTP_USER }}
          URL_FRONTEND_ORDER_DETAIL=${{ secrets.URL_FRONTEND_ORDER_DETAIL }}
          VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}
          VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}
          VAPID_SUBJECT=${{ secrets.VAPID_SUBJECT }}
          DB_SSL_CA=${{ secrets.DB_SSL_CA }}
          EOF

      - name: Verify .env.test created
        run: cat tests/.env.test | grep NODE_ENV || echo "env file created"
        # Esto solo muestra la primera l√≠nea, no revela secretos

      - name: Run Jest tests
        env:
          NODE_ENV: test
        run: npm test

      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: tests/coverage